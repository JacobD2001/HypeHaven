@using HypeHaven.models
@model (IEnumerable<Product> products, string searchTerm, int? categoryFilter, string priceSortOrder, IEnumerable<Category> categories)

<form action="@Url.Action("Search", "Product")" method="get">
    <!-- Search input -->
    <div class="form-group">
        <label for="searchTerm">Search Products:</label>
        <input type="text" name="searchTerm" class="form-control" placeholder="Search Products..." value="@Model.searchTerm">
    </div>

    <!-- Filter by Price -->
    <div class="form-group">
        <label for="priceSortOrder">Sort by Price:</label>
        <select id="priceSortOrder" name="priceSortOrder" class="form-control">
            <option value="">Default</option>
            <option value="Price">Price (Low to High)</option>
            <option value="price_desc">Price (High to Low)</option>
            <option value="date_added_desc">Date Added (Newest First)</option>
        </select>
    </div>

    <!-- Filter by Category -->
    <div class="form-group">
        <label for="categoryFilter">Filter by Category:</label>
        <select id="categoryFilter" name="categoryFilter" class="form-control">
            <option value="">All categories</option>
            @foreach (var category in Model.categories)
            {
                <option value="@category.CategoryId">@category.Name</option>
            }
        </select>
    </div>

    <!-- Search and Filter Button -->
    <button type="submit" class="btn btn-primary">Search and Filter</button>
</form>

<!--Reset filters form-->
<form asp-controller="Product" asp-action="Index" method="get">
    <button type="submit" class="btn btn-secondary" name="resetFilters">Reset Filters</button>
</form>
<!--info about filters-->
<div>
    <h3>Current Filters:</h3>
    @if (!string.IsNullOrEmpty(Model.searchTerm))
    {
        <p>Search Term: @Model.searchTerm</p>
    }

    @if (!string.IsNullOrEmpty(Model.priceSortOrder) && Model.priceSortOrder != "Default")
    {
        <p>Sort by Price: @Model.priceSortOrder</p>
    }

    @if (Model.categoryFilter.HasValue)
    {
        var selectedCategory = Model.categories.FirstOrDefault(c => c.CategoryId == Model.categoryFilter.Value);
        if (selectedCategory != null)
        {
            <p>Category Filter: @selectedCategory.Name</p>
        }
    }
</div>


@if (!Model.products.Any())
{
    <h1>No products found for @Model.searchTerm</h1>

}
else
{
    <h1>Search results for @Model.searchTerm</h1>

    <div class="album py-5 bg-light">
        <div class="container">
            <div class="row">

                @foreach (var item in Model.products)
                {
                    <div class="col-md-4">
                        <div class="card mb-4 box-shadow">
                            <img class="card-img-top" src="@item.Image" height="225" alt="Card image cap">
                            <div class="card-body">
                                <p class="card-text">@item.Name</p>
                                <p class="card-text">@item.Description</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <a type="btn btn-success" asp-controller="Product" asp-action="Detail" asp-route-id="@item.ProductId" type="button" class="btn btn-sm btn-outline-secondary">View</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

}